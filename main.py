#PROJECT ALASKA: DATA VISUALIZATION FOR UNDERWATER SEA TURBINE
#NAME: Shifan Abrar Rashid
#6+2: rashidsb
#M16819686
#FUNCTIONS OF THIS PROGRAM

import pandas as pd
import matplotlib.pyplot as plt

#BENCHMARK VALUES WITH HIGH EFFICIENCY TURBINE AND LOW EFFICIENCY TURBINE AND DIESEL POWER  
#POWER GENERATED IS IN KILOWATTS PER YEAR
#RATIO TELLS US HOW MUCH POWER 1$ CAN GIVE


#FRANCE TURBINE (in 1966)
#600 million
#620 million

#MEYGEN TURBINE
turbine1_powergeneration = 5256000
turbine1_cost = 1600000
turbine1_ratio = float(turbine1_powergeneration / turbine1_cost)

#SEAGEN TURBINE
turbine2_powergeneration = 3994000
turbine2_cost = 2400000
turbine2_ratio = float(turbine2_powergeneration / turbine2_cost)

#COLLECTED TEST DATA
df = pd.read_excel('Test.xlsx', sheet_name='Sheet1', header=None)

#AVERAGE DATA FOR TEST TURBINE FROM 10 ROWS
total_power = 0
total_cost = 0
num_rows = 10

for i in range(1, num_rows + 1):
    total_power += df.iloc[i, 4]
    total_cost += df.iloc[i, 1]

test1_powergeneration = total_power / num_rows
test1_cost = total_cost / num_rows
test1_ratio = float(test1_powergeneration / test1_cost)

#DIESEL REPLACEMENT
#THE POWER GENERATED BY DIESEL IS IN KWH/YEAR
diesel_powergeneration = 3327000
diesel_cost = 1900000
diesel_ratio = float(diesel_powergeneration / diesel_cost)

#ASK USER FOR PLOT SELECTION
print("Choose which visualization you want to see:")
print("1 -> Power and Cost Comparison for Sea Turbines")
print("2 -> Diesel Replacement Pie Chart")
print("3 -> EROI Comparison for Blade Material")

choice = int(input("Enter your choice (1/2/3): "))

#GRAPH 1: POWER AND COST COMPARISON BAR GRAPH
if choice == 1:
    turbines = ['Meygen', 'Seagen', 'Test Turbine', 'Diesel']
    power_generation = [turbine1_powergeneration, turbine2_powergeneration, test1_powergeneration, diesel_powergeneration]
    cost = [turbine1_cost/1000000, turbine2_cost/1000000, test1_cost/1000000, diesel_cost/1000000]
    ratios = [turbine1_ratio, turbine2_ratio, test1_ratio, diesel_ratio]

    fig, ax1 = plt.subplots()
    bar_width = 0.35
    x = range(len(turbines))

    #PLOTTING BARS
    ax1.bar([pos - bar_width/2 for pos in x], power_generation, bar_width, label='Power (kWh/year)', color='skyblue', edgecolor='black')
    ax2 = ax1.twinx()
    ax2.bar([pos + bar_width/2 for pos in x], cost, bar_width, label='Cost (Million $)', color='lightcoral', edgecolor='black')

    ax1.set_ylabel('Power Generated (GWh/year)')
    ax2.set_ylabel('Cost (in Million)')
    ax1.set_xticks(x)
    ax1.set_xticklabels(turbines)
    ax2.set_ylim(0, 4.5) 
    plt.title('Power and Cost Comparison for Sea Turbines')

    #ADDING RATIO VALUES ON BAR GRAPH
    for i, pos in enumerate(x):
        ax1.text(pos - 0.20, max(power_generation[i], cost[i]) + 30000, f'{ratios[i]:.2f}', ha='center', va='bottom')

    plt.show()

#GRAPH 2: PIE CHART OF DIESEL VS TURBINE POWER
elif choice == 2:
    #ASK USER FOR % DIESEL REPLACEMENT
    percent_replacement = float(input('Enter the % of Diesel Power you want to replace: '))
    diesel_power_replaced = 100 - percent_replacement

    #POWER NEEDED FROM TURBINE
    required_turbine_power = (diesel_powergeneration * percent_replacement) / 100
    print(f'Required Turbine Power Generation: {required_turbine_power:.2f} kWh/year')

    #COST ESTIMATION
    diesel_required_cost = required_turbine_power / diesel_ratio
    turbine_required_cost = required_turbine_power / test1_ratio
    cost_saved = diesel_required_cost - turbine_required_cost

    print(f'Estimated Cost with Diesel: ${diesel_required_cost:,.2f}')
    print(f'Estimated Cost with Turbine: ${turbine_required_cost:,.2f}')
    print(f'Estimated Cost Saved: ${cost_saved:,.2f}')

    #PIE CHART VISUALIZATION
    labels = ['Diesel Power Generation', 'Required Turbine Power Generation']
    sizes = [diesel_power_replaced, percent_replacement]
    colors = ['lightcoral', 'skyblue']
    explode = (0.1, 0)

    info_text = (f'Required Turbine Power: {required_turbine_power:,.2f} kWh/year\n'
                 f'Cost with Diesel: ${diesel_required_cost:,.2f}\n'
                 f'Cost with Turbine: ${turbine_required_cost:,.2f}\n'
                 f'Cost Saved: ${cost_saved:,.2f}')

    plt.figure(figsize=(8, 8))
    plt.pie(sizes, explode=explode, labels=labels, autopct='%1.1f%%', colors=colors, shadow=True, startangle=140)
    plt.gcf().text(0.15, 0.75, info_text, fontsize=9, bbox=dict(facecolor='white', edgecolor='black', boxstyle='round,pad=0.5'))
    plt.title('Diesel Power vs Required Turbine Power')
    plt.show()

#GRAPH 3: EROI COMPARISON BAR GRAPH
elif choice == 3:
    # EROI CALCULATION
    blade_weight = 10 * 10000  # kg for 10 blades

    thermoset_prod_energy = 250 * 0.001 * blade_weight
    thermoplastic_prod_energy = 135 * 0.001 * blade_weight

    turbine_energy_per_10yr = test1_powergeneration * 10
    thermoset_return_energy = turbine_energy_per_10yr * 3
    thermoplastic_return_energy = turbine_energy_per_10yr * 4
    thermoplastic_prod_energy_total = thermoplastic_prod_energy * 2  # replaced once

    thermoset_eroi = thermoset_return_energy / thermoset_prod_energy
    thermoplastic_eroi = thermoplastic_return_energy / thermoplastic_prod_energy_total

    labels = ['Thermoset Blade', 'Thermoplastic Blade']
    eroi_values = [thermoset_eroi, thermoplastic_eroi]
    colors = ['#4472C4', '#70AD47']

    plt.figure(figsize=(9, 6))
    bars = plt.bar(labels, eroi_values, width=0.4, color=colors, edgecolor='black')

    plt.title('EROI Comparison of Blade Materials', fontsize=14)
    plt.ylabel('Energy Return on Investment (EROI)', fontsize=12)
    plt.ylim(0, max(eroi_values) + 10)
    plt.grid(axis='y', linestyle='--', linewidth=0.6, alpha=0.7)

    for bar in bars:
        yval = bar.get_height()
        plt.text(bar.get_x() + bar.get_width() / 2, yval + 0.5, f'{yval:.2f}', 
                 ha='center', va='bottom', fontsize=11, fontweight='bold')

    plt.tight_layout()
    plt.show()


else:
    print("Invalid Input. Please enter 1, 2, or 3.")

